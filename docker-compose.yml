version: '3.8'

services:
  kafka:
    image: confluentinc/cp-kafka:8.1.0
    container_name: kafka-1
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      # KRaft mode (no ZooKeeper)
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER

      # Cluster ID (unique, can be generated via `kafka-storage random-uuid`)
      KAFKA_CLUSTER_ID: "MkcwN2JiNjItN2I1NC00YzI1LTgxZGItOTYyYjRmODAxMjk4"

      # Storage + performance configs
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

      # ðŸ©µ Important fixes for single-broker mode:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1

      # Misc
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    volumes:
      - kafka_data:/var/lib/kafka/data

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: upi_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build: ./user-service
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/upi_app
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started

  upi-service:
    build: ./upi-service
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/upi_app
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
  
  notification-service:
    build: ./notification-service
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/upi_app
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started

volumes:
  kafka_data:
  postgres_data: